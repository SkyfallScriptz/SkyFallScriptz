local UILib = loadstring(game:HttpGet('https://raw.githubusercontent.com/StepBroFurious/Script/main/HydraHubUi.lua'))()


local Window = UILib.new("ESP & Aimbot Framework", game.Players.LocalPlayer.UserId, "Developer")
local Category1 = Window:Category("Main", "http://www.roblox.com/asset/?id=8395621517")
local SubButton1 = Category1:Button("ESP & Aimbot Tools", "http://www.roblox.com/asset/?id=8395747586")
local Section1 = SubButton1:Section("Settings", "Left")


-- ESP Variables
local ESP_Toggle = false
local ESP_Color = Color3.new(1, 0, 0) -- Default red color
local Aimbot_Toggle = false
local Aimbot_FOV = 50 -- Field of view for the aimbot
local TargetPart = "Head" -- The part to aim for


-- Sticky Aimbot Variables
local UserInputService = game:GetService("UserInputService")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = game.Players.LocalPlayer
local IsAiming = false


-- ESP Functions
local function createESPForPlayer(player)
    if player ~= game.Players.LocalPlayer then
        player.CharacterAdded:Connect(function(character)
            wait(1) -- Wait for the character to load
            if ESP_Toggle and player.TeamColor ~= game.Players.LocalPlayer.TeamColor then
                local highlight = Instance.new("Highlight")
                highlight.Parent = character
                highlight.FillColor = ESP_Color
                highlight.OutlineColor = Color3.new(0, 0, 0)
                highlight.OutlineTransparency = 0.5
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            end
        end)
    end
end


local function createESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character and player.TeamColor ~= game.Players.LocalPlayer.TeamColor then
            local highlight = Instance.new("Highlight")
            highlight.Parent = player.Character
            highlight.FillColor = ESP_Color
            highlight.OutlineColor = Color3.new(0, 0, 0)
            highlight.OutlineTransparency = 0.5
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        end
        createESPForPlayer(player)
    end
end


local function removeESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            for _, child in pairs(player.Character:GetChildren()) do
                if child:IsA("Highlight") then
                    child:Destroy()
                end
            end
        end
    end
end


-- Aimbot Functions
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = Aimbot_FOV
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(TargetPart) then
            local target = player.Character[TargetPart]
            local screenPosition = Camera:WorldToViewportPoint(target.Position)
            local mouseDistance = (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)).Magnitude
            
            -- Check if the target is within FOV
            if mouseDistance < shortestDistance then
                closestPlayer = player
                shortestDistance = mouseDistance
            end
        end
    end
    return closestPlayer
end


local function aimAtTarget()
    local closestPlayer = getClosestPlayer()
    if closestPlayer then
        local targetHead = closestPlayer.Character[TargetPart]
        
        -- Calculate direction towards target
        local direction = (targetHead.Position - Camera.CFrame.Position).unit
        local newCFrame = CFrame.new(Camera.CFrame.Position, targetHead.Position)


        -- Adjust the camera to aim at the head of the target
        Camera.CFrame = newCFrame
    end
end


-- GUI Elements


-- ESP Toggle
Section1:Toggle({
    Title = "Enable ESP",
    Description = "Toggle ESP functionality",
    Default = false
}, function(value)
    ESP_Toggle = value
    if ESP_Toggle then
        createESP()
    else
        removeESP()
    end
end)


-- ESP Color Picker
Section1:ColorPicker({
    Title = "ESP Color",
    Description = "Change the ESP highlight color",
    Default = ESP_Color
}, function(value)
    ESP_Color = value
    if ESP_Toggle then
        removeESP()
        createESP()
    end
end)


-- Aimbot Toggle
Section1:Toggle({
    Title = "Enable Aimbot",
    Description = "Toggle Aimbot functionality",
    Default = false
}, function(value)
    Aimbot_Toggle = value
end)


-- Sticky Aimbot Logic
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button
        IsAiming = true
    end
end)


UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button
        IsAiming = false
    end
end)


-- Main loop for Sticky Aimbot
game:GetService("RunService").RenderStepped:Connect(function()
    if Aimbot_Toggle and IsAiming then
        aimAtTarget()
    end
end)


-- Round Updates (for ESP)
game.Players.PlayerAdded:Connect(createESPForPlayer)


game.Players.PlayerRemoving:Connect(function(player)
    if player.Character then
        for _, child in pairs(player.Character:GetChildren()) do
            if child:IsA("Highlight") then
                child:Destroy()
            end
        end
    end
end)


game:GetService("RunService").RenderStepped:Connect(function()
    if ESP_Toggle then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character and player.TeamColor ~= game.Players.LocalPlayer.TeamColor then
                if not player.Character:FindFirstChildOfClass("Highlight") then
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = player.Character
                    highlight.FillColor = ESP_Color
                    highlight.OutlineColor = Color3.new(0, 0, 0)
                    highlight.OutlineTransparency = 0.5
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                end
            end
        end
    end
end)


-- GUI Toggle functionality
local GuiVisible = true


-- Create a button in the GUI to toggle visibility
Section1:Button({
    Title = "Toggle GUI",
    Description = "Toggle the visibility of the entire GUI",
}, function()
    GuiVisible = not GuiVisible
    Window.Visible = GuiVisible
end)


-- Optional: Keybind for GUI Toggle (RightShift)
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.RightShift then
        GuiVisible = not GuiVisible
        Window.Visible = GuiVisible
    end
end)
