local Decimals = 4
local Clock = os.clock()
local ValueText = "Value Is Now :"

-- Load the Sentinel Framework
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Roblox-UI-Libs/main/1%20Tokyo%20Lib%20(FIXED)/Tokyo%20Lib%20Source.lua"))({
    cheatname = "Anticheat Test", -- Watermark text
    gamename = "Testing Tool", -- Watermark text
})

library:init()

local Window1 = library.NewWindow({
    title = "Anticheat Testing | ESP & Aimbot",
    size = UDim2.new(0, 510, 0.6, 6)
})

-- Create Tabs
local ESP_Tab = Window1:AddTab("ESP")
local Aimbot_Tab = Window1:AddTab("Aimbot")
local SettingsTab = library:CreateSettingsTab(Window1)

-- ESP Variables
local espSettings = {
    enabled = false,
    color = Color3.fromRGB(255, 0, 0), -- Default red
    transparency = 0.5,
    teamCheck = false,
    showHealthBar = true,
    showDistance = true,
    showName = true,
}

-- Aimbot Variables
local aimbotSettings = {
    enabled = false,
    fov = 150,
    smoothness = 0.2,
    teamCheck = false,
}

-- ESP Section
local ESP_Section = ESP_Tab:AddSection("ESP Settings", 1)

ESP_Section:AddToggle({
    text = "Enable ESP",
    state = false,
    tooltip = "Toggle ESP functionality",
    flag = "ESP_Enabled",
    callback = function(state)
        espSettings.enabled = state
        print("ESP Enabled:", state)
    end
})

ESP_Section:AddColor({
    text = "ESP Color",
    color = Color3.fromRGB(255, 0, 0),
    flag = "ESP_Color",
    callback = function(color)
        espSettings.color = color
        print("ESP Color Set To:", color)
    end
})

ESP_Section:AddToggle({
    text = "Team Check",
    state = false,
    tooltip = "Only show enemies",
    flag = "ESP_TeamCheck",
    callback = function(state)
        espSettings.teamCheck = state
        print("ESP Team Check:", state)
    end
})

ESP_Section:AddToggle({
    text = "Show Health Bar",
    state = true,
    tooltip = "Display the health bar of players",
    flag = "ESP_HealthBar",
    callback = function(state)
        espSettings.showHealthBar = state
        print("ESP Health Bar:", state)
    end
})

ESP_Section:AddToggle({
    text = "Show Distance",
    state = true,
    tooltip = "Display the distance to the player",
    flag = "ESP_Distance",
    callback = function(state)
        espSettings.showDistance = state
        print("ESP Distance:", state)
    end
})

ESP_Section:AddToggle({
    text = "Show Name",
    state = true,
    tooltip = "Display player names above characters",
    flag = "ESP_Name",
    callback = function(state)
        espSettings.showName = state
        print("ESP Name Display:", state)
    end
})

-- ESP Functionality
local function createESP(player)
    local highlight = Instance.new("Highlight")
    highlight.FillColor = espSettings.color
    highlight.FillTransparency = espSettings.transparency
    highlight.Adornee = player.Character
    highlight.Enabled = espSettings.enabled
    highlight.Parent = game:GetService("CoreGui")

    -- Adding additional ESP features
    local healthBar = nil
    local distanceLabel = nil
    local nameLabel = nil

    player.CharacterAdded:Connect(function()
        if player.Character then
            highlight.Adornee = player.Character
            if espSettings.showHealthBar then
                -- Create health bar
                healthBar = Instance.new("BillboardGui")
                healthBar.Size = UDim2.new(0, 100, 0, 20)
                healthBar.StudsOffset = Vector3.new(0, 3, 0)
                healthBar.Parent = player.Character.Head
                local bar = Instance.new("Frame")
                bar.Size = UDim2.new(1, 0, 1, 0)
                bar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                bar.Parent = healthBar
                player.Character:WaitForChild("Humanoid").HealthChanged:Connect(function()
                    local healthRatio = player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth
                    bar.Size = UDim2.new(healthRatio, 0, 1, 0)
                end)
            end

            if espSettings.showDistance then
                -- Create distance label
                distanceLabel = Instance.new("BillboardGui")
                distanceLabel.Size = UDim2.new(0, 100, 0, 20)
                distanceLabel.StudsOffset = Vector3.new(0, 2, 0)
                distanceLabel.Parent = player.Character.Head
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, 0, 1, 0)
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextStrokeTransparency = 0.8
                label.BackgroundTransparency = 1
                label.Text = "Distance: "
                label.Parent = distanceLabel
                game:GetService("RunService").RenderStepped:Connect(function()
                    local distance = (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    label.Text = "Distance: " .. math.floor(distance) .. "m"
                end)
            end

            if espSettings.showName then
                -- Create name label
                nameLabel = Instance.new("BillboardGui")
                nameLabel.Size = UDim2.new(0, 100, 0, 20)
                nameLabel.StudsOffset = Vector3.new(0, 3, 0)
                nameLabel.Parent = player.Character.Head
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, 0, 1, 0)
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextStrokeTransparency = 0.8
                label.BackgroundTransparency = 1
                label.Text = player.Name
                label.Parent = nameLabel
            end
        end
    end)

    game:GetService("RunService").RenderStepped:Connect(function()
        highlight.Enabled = espSettings.enabled
        if espSettings.teamCheck and player.Team == game.Players.LocalPlayer.Team then
            highlight.Enabled = false
        end
    end)
end

-- Apply ESP to all players
for _, player in pairs(game:GetService("Players"):GetPlayers()) do
    if player ~= game.Players.LocalPlayer then
        createESP(player)
    end
end

game:GetService("Players").PlayerAdded:Connect(function(player)
    if player ~= game.Players.LocalPlayer then
        createESP(player)
    end
end)

-- Initialization Notification
local Time = (string.format("%." .. tostring(Decimals) .. "f", os.clock() - Clock))
library:SendNotification(("Loaded In " .. tostring(Time)), 6)
